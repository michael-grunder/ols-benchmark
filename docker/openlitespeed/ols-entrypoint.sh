#!/usr/bin/env bash
set -euo pipefail

ADMIN_DIR="/usr/local/lsws/admin/conf"
ADMIN_CFG="$ADMIN_DIR/admin_config.conf"
ADMIN_HTP="$ADMIN_DIR/htpasswd"

ADMIN_USER="${OLS_ADMIN_USER:-admin}"
ADMIN_PASS="${OLS_ADMIN_PASS:-admin1}"  # must be >= 6 chars

mkdir -p "$ADMIN_DIR"

# Ensure admin_config.conf points to htpasswd
if [ ! -f "$ADMIN_CFG" ]; then
  printf "%s\n" "userDB  $ADMIN_HTP" > "$ADMIN_CFG"
elif ! grep -qE '^\s*userDB\s+' "$ADMIN_CFG"; then
  printf "%s\n" "userDB  $ADMIN_HTP" >> "$ADMIN_CFG"
fi

# Enforce minimal password length to match OLS' checks
if [ "${#ADMIN_PASS}" -lt 6 ]; then
  echo "OLS_ADMIN_PASS must be >= 6 chars" >&2
  exit 1
fi

# Generate APR1 hash; prefer OLS' own hasher
if command -v php >/dev/null \
   && [ -f /usr/local/lsws/admin/misc/htpasswd.php ]; then
  H="$(php -r 'require "/usr/local/lsws/admin/misc/htpasswd.php";
    echo Htpasswd::crypt_apr1_md5(getenv("P"));' P="$ADMIN_PASS")"
else
  H="$(openssl passwd -apr1 "$ADMIN_PASS")"
fi

printf "%s:%s\n" "$ADMIN_USER" "$H" > "$ADMIN_HTP"
chmod 640 "$ADMIN_HTP"
chown lsadm:lsadm "$ADMIN_HTP" 2>/dev/null || true

# Render LSAPI env vars for the wrapper to consume
cat > /etc/lsapi.env <<EOF
# generated by ols-entrypoint
${LSAPI_CHILDREN:+LSAPI_CHILDREN=${LSAPI_CHILDREN}}
${LSAPI_MAX_REQS:+LSAPI_MAX_REQS=${LSAPI_MAX_REQS}}
${LSAPI_PGRP_MAX_IDLE:+LSAPI_PGRP_MAX_IDLE=${LSAPI_PGRP_MAX_IDLE}}
${LSAPI_MAX_PROCESS_TIME:+LSAPI_MAX_PROCESS_TIME=${LSAPI_MAX_PROCESS_TIME}}
${LSAPI_AVOID_FORK:+LSAPI_AVOID_FORK=${LSAPI_AVOID_FORK}}
${LSAPI_SLOW_REQ_TIME:+LSAPI_SLOW_REQ_TIME=${LSAPI_SLOW_REQ_TIME}}
${LSAPI_RESTART_ON_CRASH:+LSAPI_RESTART_ON_CRASH=${LSAPI_RESTART_ON_CRASH}}
EOF

# Start OLS and follow logs
/usr/local/lsws/bin/lswsctrl start
exec tail -F \
  /usr/local/lsws/logs/error.log \
  /usr/local/lsws/admin/logs/error.log
